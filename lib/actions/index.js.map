{"version":3,"sources":["../../src/actions/index.js"],"names":[],"mappings":";;;;;;QAQgB,a,GAAA,a;QAOA,gB,GAAA,gB;QAOA,Y,GAAA,Y;QAOA,Y,GAAA,Y;QASA,K,GAAA,K;QASA,M,GAAA,M;;AA/ChB;;IAAY,G;;;;AAEL,IAAM,0CAAiB,gBAAvB;AACA,IAAM,gDAAoB,mBAA1B;AACA,IAAM,wCAAgB,eAAtB;AACA,IAAM,wCAAgB,eAAtB;AACA,IAAM,0BAAS,QAAf;;AAEA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AACnC,SAAO;AACL,UAAM,cADD;AAEL;AAFK,GAAP;AAID;;AAEM,SAAS,gBAAT,CAA0B,QAA1B,EAAoC;AACzC,SAAO;AACL,UAAM,iBADD;AAEL;AAFK,GAAP;AAID;;AAEM,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAClC,SAAO;AACL,UAAM,aADD;AAEL,WAAO;AAFF,GAAP;AAID;;AAEM,SAAS,YAAT,CAAsB,KAAtB,EAA6B,QAA7B,EAAuC;AAC5C,SAAO;AACL,UAAM,aADD;AAEL,WAAO,KAFF;AAGL,aAAS,SAAS,IAHb;AAIL,WAAO,SAAS;AAJX,GAAP;AAMD;;AAEM,SAAS,KAAT,CAAe,KAAf,EAAsB,QAAtB,EAAgC;AACrC,SAAO,oBAAY;AACjB,aAAS,aAAa,KAAb,CAAT;AACA,WAAO,IAAI,WAAJ,CAAgB,KAAhB,CAAsB,KAAtB,EAA6B,QAA7B,EACJ,IADI,CACC;AAAA,aAAQ,SAAS,aAAa,KAAb,EAAoB,EAAC,MAAM,IAAP,EAApB,CAAT,CAAR;AAAA,KADD,EAEJ,KAFI,CAEE;AAAA,aAAS,SAAS,aAAa,KAAb,EAAoB,EAAC,OAAO,KAAR,EAApB,CAAT,CAAT;AAAA,KAFF,CAAP;AAGD,GALD;AAMD;;AAEM,SAAS,MAAT,GAAkB;AACvB,SAAO;AACL,UAAM;AADD,GAAP;AAGD","file":"index.js","sourcesContent":["import * as API from '../services/api';\n\nexport const KEYPRESS_EMAIL = 'KEYPRESS_EMAIL';\nexport const KEYPRESS_PASSWORD = 'KEYPRESS_PASSWORD';\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\nexport const RECEIVE_LOGIN = 'RECEIVE_LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport function keyPressEmail(email) {\n  return {\n    type: KEYPRESS_EMAIL,\n    email\n  };\n}\n\nexport function keyPressPassword(password) {\n  return {\n    type: KEYPRESS_PASSWORD,\n    password\n  }\n}\n\nexport function requestLogin(email) {\n  return {\n    type: REQUEST_LOGIN,\n    email: email\n  };\n}\n\nexport function receiveLogin(email, response) {\n  return {\n    type: RECEIVE_LOGIN,\n    email: email,\n    profile: response.data,\n    error: response.error\n  };\n}\n\nexport function login(email, password) {\n  return dispatch => {\n    dispatch(requestLogin(email));\n    return API.UserService.login(email, password)\n      .then(json => dispatch(receiveLogin(email, {data: json})))\n      .catch(error => dispatch(receiveLogin(email, {error: error})));\n  }\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n}"]}