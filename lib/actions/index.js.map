{"version":3,"sources":["../../src/actions/index.js"],"names":[],"mappings":";;;;;;QASgB;QAOA;QAOA;QAOA;QASA;QASA;QAMA;;AAtDhB;;IAAY;;;;AAEL,IAAM,0CAAiB,gBAAjB;AACN,IAAM,gDAAoB,mBAApB;AACN,IAAM,wCAAgB,eAAhB;AACN,IAAM,wCAAgB,eAAhB;AACN,IAAM,0BAAS,QAAT;AACN,IAAM,kCAAa,YAAb;;AAEN,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AACnC,SAAO;AACL,UAAM,cAAN;AACA,gBAFK;GAAP,CADmC;CAA9B;;AAOA,SAAS,gBAAT,CAA0B,QAA1B,EAAoC;AACzC,SAAO;AACL,UAAM,iBAAN;AACA,sBAFK;GAAP,CADyC;CAApC;;AAOA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AAClC,SAAO;AACL,UAAM,aAAN;AACA,WAAO,KAAP;GAFF,CADkC;CAA7B;;AAOA,SAAS,YAAT,CAAsB,KAAtB,EAA6B,QAA7B,EAAuC;AAC5C,SAAO;AACL,UAAM,aAAN;AACA,WAAO,KAAP;AACA,aAAS,SAAS,IAAT;AACT,WAAO,SAAS,KAAT;GAJT,CAD4C;CAAvC;;AASA,SAAS,KAAT,CAAe,KAAf,EAAsB,QAAtB,EAAgC;AACrC,SAAO,oBAAY;AACjB,aAAS,aAAa,KAAb,CAAT,EADiB;AAEjB,WAAO,IAAI,WAAJ,CAAgB,KAAhB,CAAsB,KAAtB,EAA6B,QAA7B,EACJ,IADI,CACC;aAAQ,SAAS,aAAa,KAAb,EAAoB,EAAC,MAAM,IAAN,EAArB,CAAT;KAAR,CADD,CAEJ,KAFI,CAEE;aAAS,SAAS,aAAa,KAAb,EAAoB,EAAC,OAAO,KAAP,EAArB,CAAT;KAAT,CAFT,CAFiB;GAAZ,CAD8B;CAAhC;;AASA,SAAS,MAAT,GAAkB;AACvB,SAAO;AACL,UAAM,MAAN;GADF,CADuB;CAAlB;;AAMA,SAAS,SAAT,GAAqB;AAC1B,SAAO,oBAAY;AACjB,WAAO,IAAI,WAAJ,CAAgB,IAAhB,GACJ,IADI,CACC;aAAS,SAAS;AACtB,cAAM,UAAN;AACA,eAAO,KAAP;OAFa;KAAT,CADD,CAKJ,KALI,CAKE;aAAS,SAAS;AACvB,cAAM,UAAN;AACA,eAAO,KAAP;OAFc;KAAT,CALT,CADiB;GAAZ,CADmB;CAArB","file":"index.js","sourcesContent":["import * as API from '../services/api';\n\nexport const KEYPRESS_EMAIL = 'KEYPRESS_EMAIL';\nexport const KEYPRESS_PASSWORD = 'KEYPRESS_PASSWORD';\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN';\nexport const RECEIVE_LOGIN = 'RECEIVE_LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const FIND_MEMES = 'FIND_MEMES';\n\nexport function keyPressEmail(email) {\n  return {\n    type: KEYPRESS_EMAIL,\n    email\n  };\n}\n\nexport function keyPressPassword(password) {\n  return {\n    type: KEYPRESS_PASSWORD,\n    password\n  }\n}\n\nexport function requestLogin(email) {\n  return {\n    type: REQUEST_LOGIN,\n    email: email\n  };\n}\n\nexport function receiveLogin(email, response) {\n  return {\n    type: RECEIVE_LOGIN,\n    email: email,\n    profile: response.data,\n    error: response.error\n  };\n}\n\nexport function login(email, password) {\n  return dispatch => {\n    dispatch(requestLogin(email));\n    return API.UserService.login(email, password)\n      .then(json => dispatch(receiveLogin(email, {data: json})))\n      .catch(error => dispatch(receiveLogin(email, {error: error})));\n  }\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n}\n\nexport function findMemes() {\n  return dispatch => {\n    return API.MemeService.find()\n      .then(memes => dispatch({\n        type: FIND_MEMES,\n        memes: memes\n      }))\n      .catch(error => dispatch({\n        type: FIND_MEMES,\n        error: error\n      }));\n  }\n}"]}